"use client"

import { TbSend2 } from "react-icons/tb";
import { React, useEffect, useContext, useRef } from "react"
import { GlobalContext } from "@/Contexts/Context";
import Userlogo from "@/components/Userlogo";
import Ailogo from "@/components/Ailogo"

export default function Conversation() {


  const { homecontent, sethomecontent } = useContext(GlobalContext)
  const { sendbtn, setsendbtn } = useContext(GlobalContext)
  const { resultdata, setresultdata } = useContext(GlobalContext)
  const { lino, setlino } = useContext(GlobalContext)
  const { sidebarlistactive, setsidebarlistactive } = useContext(GlobalContext)
  const { inputvalue, setinputvalue } = useContext(GlobalContext)
  const { linkindex, setlinkindex } = useContext(GlobalContext)
  const { conversationdata, setconversationdata } = useContext(GlobalContext)
  const { clicked, setclicked } = useContext(GlobalContext)

  const messagesEndRef = useRef(null);

  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [ sendbtn, conversationdata, sidebarlistactive]);


  function inputonchange(event) {
    setinputvalue(event.target.value)
    console.log(inputvalue)
  }



  function handlesendclick() {
    sethomecontent(false)
    setsendbtn(true)


    if (sidebarlistactive === -100) {
      setconversationdata(prev => [{
        data: [
          { question: `${inputvalue}`, answer: "new array answer" }
        ]
      }, ...prev])
      setsidebarlistactive(0)


    }
    console.log(sidebarlistactive)
    if (sidebarlistactive !== -100) {
      setconversationdata(prev => {
        const newState = [...prev];
        newState[sidebarlistactive] = {
          ...newState[sidebarlistactive],
          data: [
            ...newState[sidebarlistactive].data,
            { question: `${inputvalue}`, answer: "nestedinputanswe" }
          ]
        };
        return newState;
      }
      );
    }

    setinputvalue("")
  }

  return (
    <div className={`max-w-[1200px] w-full m-auto lg:px-12 `}>
      <div className="h-screen p-4 pt-20 justify-between flex flex-col ">
        {homecontent === true ? (
          <div>
            <p className="text-[2.5rem] leading-tight"><span>Hello, user</span> <br></br> How can I help you today?</p>
          </div>
        ) : <div></div>}
        {sendbtn === true && linkindex == 0 && conversationdata.length !== 0 ? (
          <div className={`overflow-y-auto overflow-x-hidden h-full max-w-[100%] mb-28 sm:mb-24 `} >
            {conversationdata[lino].data.map((item, index) => (
              <>
                <div key={index} className="px-2 py-4 flex flex-col gap-10 ">
                  <div className="flex flex-col gap-4 md:flex md:flex-row md:gap-6 "><Userlogo /> <div className="w-[98%] break-words md:w-[88%] lg:w-[92%]">{item.question}</div></div>
                  <div className="flex flex-col gap-4 md:flex md:flex-row md:gap-6 "><Ailogo /> <div className="w-[98%] break-words md:w-[88%] lg:w-[92%]">{item.answer}</div></div>
                </div>
                <div ref={messagesEndRef} />
              </>
            ))}
           
          </div>
        ) : null}
        <div className={`fixed max-w-[1200px] w-full left-1/2 transform -translate-x-1/2 z-10 bottom-0  p-4 flex flex-col gap-3 lg:w-[90%]`}>
          <div className=" bg-gray-500 w-full flex items-center rounded-full p-3">
            <input value={inputvalue} onChange={(event) => inputonchange(event)} className="w-full py-1 border-none pl-4 bg-gray-500 text-white focus:outline-none placeholder-gray-300 " placeholder="Enter a prompt here"></input>
            <button
              onClick={handlesendclick}
              className={` transform transition-transform duration-500 ${inputvalue !== '' ? 'scale-100' : 'scale-0'
                }`}
            >
              <TbSend2 className="mx-4 text-3xl text-white" />
            </button>
          </div>
          <p className=" text-xs text-center">Genie.AI may display inaccurate info, including about people, so double-check its responses.</p>
        </div>
      </div>
    </div>


  );
}
