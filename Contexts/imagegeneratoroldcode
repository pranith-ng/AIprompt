"use client"

import { GlobalContext } from '@/Contexts/Context'
import React, { useContext, useRef, useEffect } from 'react'
import Homelogo from '@/components/homelogo'


const page = () => {

  const { Imagedata, setImagedata } = useContext(GlobalContext)
  const { lino, setlino } = useContext(GlobalContext)
  const { sendbtn, setsendbtn } = useContext(GlobalContext)
  const { linkindex, setlinkindex } = useContext(GlobalContext)
  const { inputvalue, setinputvalue } = useContext(GlobalContext)
  const { sidebarlistactive, setsidebarlistactive } = useContext(GlobalContext)


  const messagesEndRef = useRef(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [Imagedata, sendbtn])


  function handleimageinputchange(e) {
    setinputvalue(e.target.value)
    console.log(inputvalue)
  }


  function handleimagesendbtn() {

    if (inputvalue !== "") {
      setsendbtn(true)
    }


    if (sidebarlistactive === -100 & inputvalue !== "") {
      setImagedata(prev => [{
        data: [
          { question: `${inputvalue}`, answer: "new array answer" }
        ]
      }, ...prev])
      setsidebarlistactive(0)



    }
    console.log(sidebarlistactive)
    if (sidebarlistactive !== -100 & inputvalue !== "") {
      setImagedata(prev => {
        const newState = [...prev];
        newState[sidebarlistactive] = {
          ...newState[sidebarlistactive],
          data: [
            ...newState[sidebarlistactive].data,
            { question: `${inputvalue}`, answer: "nestedinputanswe" }
          ]
        };
        return newState;
      }
      );
    }
    setinputvalue("")
  }

  return (
    <div>
      <Homelogo />
      <div className='px-4 pb-28 pt-20  overflow-hidden md:pb-20 '>
        <div className=' fixed w-full z-10 left-0 border py-2 rounded flex flex-col px-4 justify-between md:flex-row md:justify-between md:px-4 md:left-5 md:w-[96%] lg:static lg:w-full'>
          <div className=' flex-grow'><input value={inputvalue} onChange={(e) => handleimageinputchange(e)} placeholder='type something' className='w-full py-3 px-2 rounded-xl focus:outline-none'></input></div>
          <div className='flex justify-center gap-5'>
            <select name="resolution" className='border p-1 rounded hover:cursor-pointer'>
              <option value="">127X345</option>
              <option value="">127X345</option>
              <option value="">127X345</option>
            </select>
            <select name="quantity" className='border p-1 rounded hover:cursor-pointer'>
              <option value="">1 photo</option>
              <option value="">2 photo</option>
              <option value="">3 photo</option>
              <option value="">4 photo</option>
            </select>
            <button onClick={handleimagesendbtn} className={`px-5 py-2 border rounded text-white hover:cursor-pointer ${inputvalue !== "" ? "bg-blue-600 " : "bg-gray-700"}`}>Generate</button>
          </div>
        </div>
        <div className='h-full'>
        {
          sendbtn === true & linkindex == 1 & Imagedata.length !== 0 ? (
            <>
            <div className=' pt-32 pb-20 md:pt-20 '> </div>
             <div className='overflow-auto h-full pb-4 '>
              {Imagedata[lino].data.map((item, index) => (
                <>
                  <div className="px-2 py-4">
                    <div className="p-2">{item.question}</div>
                    <div>{item.answer}</div>
                    <div ref={messagesEndRef} />
                  </div>
                  
                </>
              ))}
            </div>
            </>
          )
            : null
        }

        </div>
        
      </div>
    </div>
  )
}

export default page